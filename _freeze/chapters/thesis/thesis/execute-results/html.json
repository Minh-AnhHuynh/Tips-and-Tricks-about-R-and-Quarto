{
  "hash": "fca7ebbc521557ee27b052bdaa22b27e",
  "result": {
    "engine": "knitr",
    "markdown": "# Tips and Trick to write your Thesis in Quarto\n\nBelow are some tips and tricks that I needed to use alongside the\nregular Quarto settings, which were unfortunately not enough to fully\nformat my thesis just like how I wanted. I had to scour the internet and\nstackoverflow alongside some latex documentation, and I hope this will\nhelp someone one day. Or else it serves as a nice little documentation\nfor future usage.\n\n# Acronyms and glossaries\n\nAs of 2024, there are support packages for acronyms and glossaries in Quarto.\n- https://rchaput.github.io/acronyms/\n- https://debruine.github.io/glossary/index.html\n\nHowever I still use the acronyms package in LaTeX, as it seems to still be more powerful.\nCurrent issue is that I can't use it in the caption of a longtblr (tabularrray).\n\n# Captions\n\n## Add short captions to List of Tables with pandoc filters and LaTeX\n\nHow to add only part of figure caption in list of figures but keep the full description in the caption.\n\n\n### Pandoc filter : short-captions\n\nBased on this\n[discussion](https://github.com/quarto-dev/quarto-cli/discussions/3769)\nwhich leads to the usage of the\n[short-captions](https://github.com/pandoc/lua-filters/tree/master/short-captions)\npandoc filter.\n\nFirst add the filter to the yaml header:\n\n``` yaml\nfilters:\n  - \"pandoc-filters/short-captions.lua\"\n```\n\n``` markdown\n![**Bold caption.** Additional caption. End with a citation. [@citation]](figures/figure.png){#fig:label short-caption=\"**Short bold caption**.\"}\n```\n[Cross-reference](https://quarto.org/docs/authoring/cross-references.html) in-line with this syntax : `@fig-label`\n\n\n### captioner package\n\nBased on [this thread](https://stackoverflow.com/questions/69094228/give-a-single-figure-multiple-captions-in-rmarkdown-pdf-book-output),\nor [this one](https://tex.stackexchange.com/questions/83392/change-caption-in-list-of-tables) from stackoverflow, you can run this LaTeX code to do so :\n\n``` tex\n\\begin{figure}\n\\includegraphics{figure.jpg} \n\\caption[\\textbf{Bold caption.}]\n{\\textbf{Figure or table description. (\\cite{Meza-Meza.2020}) or Adapted from \\textcite{Author}}\n\\label{fig-label}\n\\end{figure}\n```\n\nNote that I return to a new line to make it easier to read.\n\nWrite `\\listoffigures` to generate the list of figures.\n\nThen you can crossreference the figure using a LaTeX command :\n`**(Figure \\ref{label})**`\n\nI originally used this method because I didn't know about the pandoc\nfilters. I'd have to say the pandoc way is easier to write, and you can\nhave a miniature image in source or visual mode inside R Studio.\n\nOne minor hiccup of the latex way is that if you ever switch to the\nsource pane, any bolded crossreference with latex syntax will be undone.\nSuch as : From `**(Figure \\ref{fig:vitd3})**` to\n`**(Figure** \\ref{fig:vitd3})` when going to source and back. This is\nquite annoying. So I'd rather use pandoc from now.\n\nUpdate : The cleveref package @sec-bold-crossref solves this problem.\n\n### Built-in Quarto attribute using fig-scap\n\nUnknowingly, the figure attribute [fig-scap](https://quarto.org/docs/reference/cells/cells-knitr.html#figures) solves the problem.\n\n``` markdown\n![Long caption](R_logo.png){#fig-label fig-scap=\"A short caption\"}\n```\n![Long caption](R_logo.png){#fig-label fig-scap=\"A short caption\"}\n\n\\listoffigures\n\n# Cross-references\n\n## Automatically bold cross-reference (Figure, Table #) {#sec-bold-crossref}\n\nInstead of using `(**Figure \\ref{figure:stuff}**)`, use `\\cref{figure:stuff}` which will automatically put \"Figure\" or \"Table\" or something else as appropriate.\n\nTo add automatic bold, add to the preambule :\n\n``` yaml\nheader-includes:\n- \\usepackage[capitalise,noabbrev, nameinlink]{cleveref} # Allows \\cref{} to cite latex table as \"Table 3\"\n# Specify which cross-reference should automatically be bolded : Tables and Figures\n# Use \\cref{} ; For some reason this only works with this exact disposition :\n# Only #1, nameinlink and each of the reference specified. namelink + #1#2#3 would give an error.\n- \\crefdefaultlabelformat{#2\\textbf{#1}#3} # <-- Only #1 in \\textbf\n- \\crefname{table}{\\textbf{Table}}{\\textbf{Tables}}\n- \\Crefname{table}{\\textbf{Table}}{\\textbf{Tables}}\n- \\crefname{figure}{\\textbf{Figure}}{\\textbf{Figures}} \n- \\Crefname{figure}{\\textbf{Figure}}{\\textbf{Figures}}\n```\nThe parameter `nameinlink` could be removed, but it allows the link to span both the number and the cross-referenced material (Table + #) and not just the number, which I find more practical.\n\n[Stackoverflow reference](https://tex.stackexchange.com/questions/87903/bold-cross-references)\n\n## Add your table of content to the pdf bookmark\n\nThe generated pdf document has a convenient bookmark function for ease\nof navigation. The bookmark automatically includes pandoc headers,\nexcept your table of content.\\\nAdd the bookmark package to include headers, and then use the following\ncommand:\n\n``` yaml\nheader-includes:\n- \\usepackage{setspace} # Example of another package used. This syntax will not work with only one package.\n- \\usepackage{bookmark}\n```\n\n``` tex\n% Add the command just before the toc.\n\\pdfbookmark[section]{\\contentsname}{toc}\n% Next command is to rename the table of content\n\\renewcommand{\\contentsname}{Table des matières}\n\\tableofcontents{}\n\\newpage\n```\n## Cross-Reference showing the section number instead of figure\n\nWell that's [simple](https://tex.stackexchange.com/questions/19651/reference-to-a-figure-uses-the-sections-number):\n\n> Move `\\label{fig: hasse}` after `\\caption{Hasse diagram}` since `\\caption` has to come before `\\label`. This applies to figures and tables in general. I would not use spaces in label names. Also note Gonzalos comment regarding `\\centering`.\n\n> Instead of the center environment you could use the \\centering command right after \\begin{figure}[htbp]; the environment adds extra vertical space which (in most cases) is undesired – Gonzalo Medina\n\n## How to set subfigure to uppercase\n\nUse `\\renewcommand{\\thesubfigure}{\\Alph{subfigure}}` in your preamble.\n\n[Source.](https://tex.stackexchange.com/questions/278138/how-can-i-set-the-subfigure-labels-in-latex-to-uppercase)\n\n## Continuous figure numbering\n\nIf you want something like Figure 1, Figure 2 instead of Figure 1.1,\nFigure 1.2, you need to use the following latex command :\n\n``` tex\n- \\counterwithout{figure}{chapter} \n- \\counterwithout{figure}{section}\n```\n\nThis is working for me, using scrreport as the document class (KOMA\nclass).\n\n### **Explanation** :\n\n[Changing the numbering of (e.g.) figures involves two\nmodifications](https://imathworks.com/tex/tex-latex-continuous-v-per-chapter-section-numbering-of-figures-tables-and-other-document-elements/):\n\n-   Redefining whether or not the figure counter will be reset whenever\n    the chapter/section counter is incremented;\n\n-   Redefining the \"appearance\" of the figure counter (\\thefigure),\n    i.e., removing (or adding) the chapter/section prefix.\n\n[**`\\counterwithout{somecounter}{anothercounter}`**](https://www.overleaf.com/learn/latex/Counters#.5Ccounterwithout.7Bsomecounter.7D.7Banothercounter.7D)\n\n`\\counterwithout{somecounter}{anothercounter}` removes the link between\n*`somecounter`* and *`anothercounter`* so that they are independent. For\nany pair of counters, you can switch between using `\\counterwithout` and\n`\\counterwithin`, as the following example shows for the `example` and\n`section` counters---you can open this example in Overleaf using the\nlink provided below the code.\n\n# Lists of figures and tables\n\n\n## Remove a section from your table of contents in pandoc\n\n[You need to combine .unlisted with .unnumbered to achieve\nthis](https://stackoverflow.com/questions/49573734/do-not-include-section-in-toc-in-pandoc),\nas stated in [Pandoc\ndocumentation](https://pandoc.org/MANUAL.html#heading-identifiers).\n\n(I have looked inside the Pandoc documentation however and I have no\nidea where that is stated).\n\nAlso, I discovered it was literally marked in the [Quarto\ndocumentation](https://quarto.org/docs/output-formats/pdf-basics.html#table-of-contents)\nitself !\n\n``` tex\n# Abstract {.unnumbered .unlisted}\n\n# Acknowledgements {.unnumbered .unlisted}\n\n# Chapter 1\n```\n\n\n\n\n## Suppress a biblatex field in the bibliography\n\nCan be used only in the [preamble](https://quarto.org/docs/output-formats/pdf-basics.html#latex-includes):\n\n> If you compile your bibliography with biber, simply add:\n\n\n``` yaml\nheader-includes:\n# Define a command to remove the \"note\" field from the bibliography\n- \\AtEveryBibitem{\\clearfield{note}}\n```\n[How can I remove common fields using `biblatex`?](https://tex.stackexchange.com/questions/280826/how-can-i-remove-common-fields-using-biblatex)\n\n\n## Delete the biber cache\n\nIf for some unknown reason, you're trying to generate your bibliography and Quarto hits you with\n\n``` tex\ngenerating bibliography\n  Couldn't load any math lib(s), not even fallback to Calc.pm at C:\\Users\\Minh-Anh\\AppData\\Local\\Temp\\par-4d696e682d416e68\\cache-5e43119d746c745befc6eda076997d4ff7d8b07a\\19c9b262.pm line 25.\netc.\n```\nGo to the specified file path and delete the folders. What a headache.\n\nAlso, `biber --cache` shows you where it is (and if it's bugged, you'll be greeted with this awesome bug error).\n\n\n\n\n# Tables\n\n## Use tabularray\n\nModern way of making tables, combining automatic column resizing from tabularx, longtable and working captions (ltablesx has a caption error where shortcaptions doesn't seem to work).\n\n- Making the table smaller natively sounds more complicated than just using :\n\n``` tex\n\\begingroup\n\\small\n% Insert table code\n\\endgroup\n```\n\n\n\n\n``` tex\nNewTblrTheme{tinyfr}{\n\\SetTblrStyle{head}{font=\\small}\n\\DefTblrTemplate{caption-tag}{default}{\\textbf{Table\\hspace{0.25em}\\thetable}}\n\\DefTblrTemplate{caption-sep}{default}{\\enskip--\\enskip}\n\\DefTblrTemplate{contfoot-text}{default}{\\scriptsize\\itshape\\color{gray} (Suite à la page suivante)}\n\\DefTblrTemplate{conthead-text}{default}{(Suite)}\n}\n%\\begingroup\n%\\small\n\\begin{landscape}\n\\begin{longtblr}[\n    theme = tinyfr,\n    caption = {\\textbf{Opinion des méta-analyses sur les études observationnelles concernant l'existence d'une relation entre la vitamine D et la COVID-19.}},\n    entry = {Opinion des méta-analyses sur les études observationnelles concernant l'existence d'une relation entre la vitamine D et la COVID-19.},\n    label = {tblr:meta-analyses-obs}\n]{\n    colspec = {lXX},\n    cells= {font = \\small},\n    row{1} = {font=\\bfseries \\small, halign=c},\n    rowhead = 1\n}\n\n\\toprule\nÉtude & Design et taille de l'échantillon & Opinion \\\\\n\\midrule\n```\n\n\n\n\n\n# Formatting\n\n## Wrap long lines in knitr output\n\n- Copy pasted from yihui's knitr example https://github.com/yihui/knitr-examples/blob/master/077-wrap-output.Rmd\n- There is [no current option for Quarto](https://github.com/quarto-dev/quarto-cli/discussions/3693)\n \nLong lines in the output will not be (hard-)wrapped automatically unless you break them manually.\n\n\n\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\na <- '## \"stx2A; shiga-like toxin II A subunit encoded by bacteriophage BP-933W; K11006 shiga toxin subunit A\" '\na\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] \"## \\\"stx2A; shiga-like toxin II A subunit encoded by bacteriophage BP-933W; K11006 shiga toxin subunit A\\\" \"\n```\n\n\n:::\n:::\n\n\n\n\n\n\n\n\nPerhaps you see it is wrapped in RStudio, but that is because `<pre>` has the CSS attribute `white-space: pre-wrap;`. For LaTeX output, the output is in the `verbatim` environment by default, which will not wrap long lines (everything is shown as is).\n\nYou can redefine the output hook function so that you can instruct some chunks to hard-wrap their output lines, e.g.\n\n\n\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(knitr)\nhook_output = knit_hooks$get('output')\nknit_hooks$set(output = function(x, options) {\n  # this hook is used only when the linewidth option is not NULL\n  if (!is.null(n <- options$linewidth)) {\n    x = xfun::split_lines(x)\n    # any lines wider than n should be wrapped\n    if (any(nchar(x) > n)) x = strwrap(x, width = n)\n    x = paste(x, collapse = '\\n')\n  }\n  hook_output(x, options)\n})\n```\n:::\n\n\n\n\n\n\n\n\nNow see the output of `a` (note `linewidth` is not a default **knitr** option):\n\n\n\n\n\n\n\n\n::: {.cell linewidth='60'}\n\n```{.r .cell-code}\na\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] \"## \\\"stx2A; shiga-like toxin II A subunit encoded by\nbacteriophage BP-933W; K11006 shiga toxin subunit A\\\" \"\n```\n\n\n:::\n:::\n\n\n\n\n\n\n\n\n\n\n\n# Bibliography\n\n## Include an organization name in citeproc\n\nJust include double brackets around your {{organization}} and citeproc\nwill format correctly.\n\nCitation of author : `\\autocite{{D’Ecclesiis.2022}}`\n\n[https://tex.stackexchange.com/questions/149769/how-to-cite-organizations-name-with-space-between-words](https://tex.stackexchange.com/questions/149769/how-to-cite-organizations-name-with-space-between-words)\n\n``` tex\n@article{IOM.2011.org,\nyear = {2011},\ntitle = {{Dietary Reference Intakes for Calcium and Vitamin D}},\nauthor = {{Institute of Medicine}},\njournal = {The National Academies Press},\ndoi = {10.17226/13050},\npages = {1115},\nkeywords = {},\n}\n\n@article{D’Ecclesiis.2022, \nyear = {2022}, \nrating = {5}, \ntitle = {{Vitamin D and SARS-CoV2 infection, severity and mortality: A systematic review and meta-analysis}}, \nauthor = {D’Ecclesiis}\njournal = {PLoS ONE}, \ndoi = {10.1371/journal.pone.0268396}, \npmid = {35793346}, \npmcid = {PMC9258852}, \npages = {e0268396}, \nnumber = {7}, \nvolume = {17}, \n}\n\n```\n\n## Remove --- 3 em dash from bibliography\n\nThis is actually the intended, default behavior of biblatex-chicago package:\n\n> The Manual doesn’t clarify how to treat multiple works by the same author, in one or more\nof which their name doesn’t appear on the title page. By default, biblatex-chicago will,\nafter the first appearance in the reference list, replace identical authors with the 3-em\ndash, regardless of any authortype field that may be present. If you want to distinguish\nbetween works certainly written by and works merely ascribed to a given author, then\nyou can use the dashed option in the options field of individual entries, and possibly also\na sortname, to get the results you want.\n\nExample when using biblatex : remove doi, isbn and 3 em dash for repeated authors\n``` tex\nheader-includes:\n- \\usepackage[authordate, backend=biber, doi=false, isbn=false, dashed=false]{biblatex-chicago}\n```\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}